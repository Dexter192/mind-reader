{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\Website\\\\mind-reader\\\\socket-client\\\\src\\\\game\\\\Game.js\";\nimport React from 'react';\nimport { socket } from \"../service/socket\";\nimport Error from \"./Error\";\nimport HostScreen from \"./host/HostScreen\";\nimport PlayerScreen from \"./player/PlayerScreen\";\n\nclass Game extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.loadPageContent = () => {\n      if (this.state.type === \"host\") {\n        return /*#__PURE__*/_jsxDEV(HostScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 14\n        }, this);\n      } else if (this.state.type === \"player\") {\n        return /*#__PURE__*/_jsxDEV(HostScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 14\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(HostScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 14\n        }, this);\n      }\n    };\n  }\n\n  componentDidMount() {\n    socket.on('load gamescreen', (type, name) => {\n      this.setState({\n        type: type,\n        name: name\n      });\n      document.body.style.backgroundColor = 'green';\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [\"Game Screen\", this.state.type === \"host\" && /*#__PURE__*/_jsxDEV(HostScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 41\n      }, this), this.state.type === \"player\" && /*#__PURE__*/_jsxDEV(PlayerScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 43\n      }, this), this.state.type === \"player\" && /*#__PURE__*/_jsxDEV(PlayerScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/Daniel/Documents/Website/mind-reader/socket-client/src/game/Game.js"],"names":["React","socket","Error","HostScreen","PlayerScreen","Game","Component","loadPageContent","state","type","componentDidMount","on","name","setState","document","body","style","backgroundColor","render","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AAEA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAUjCC,eAViC,GAUf,MAAM;AACtB,UAAI,KAAKC,KAAL,CAAWC,IAAX,KAAoB,MAAxB,EAAgC;AAC9B,4BAAO,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAGK,IAAI,KAAKD,KAAL,CAAWC,IAAX,KAAoB,QAAxB,EAAkC;AACrC,4BAAO,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFI,MAGA;AACH,4BAAO,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AAEF,KArBgC;AAAA;;AAGjCC,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,MAAM,CAACU,EAAP,CAAU,iBAAV,EAA6B,CAACF,IAAD,EAAOG,IAAP,KAAgB;AAC3C,WAAKC,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAEA,IAAP;AAAaG,QAAAA,IAAI,EAAEA;AAAnB,OAAd;AACAE,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;AACD,KAHD;AAID;;AAeDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,gCAEG,KAAKX,KAAL,CAAWC,IAAX,KAAqB,MAArB,iBAA+B,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAFlC,EAGG,KAAKD,KAAL,CAAWC,IAAX,KAAqB,QAArB,iBAAiC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAHpC,EAIG,KAAKD,KAAL,CAAWC,IAAX,KAAqB,QAArB,iBAAiC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAJpC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAhCgC;;AAmCnC,eAAeJ,IAAf","sourcesContent":["import React from 'react';\r\nimport {socket} from \"../service/socket\";\r\nimport Error from \"./Error\";\r\nimport HostScreen from \"./host/HostScreen\"\r\nimport PlayerScreen from \"./player/PlayerScreen\"\r\n\r\nclass Game extends React.Component {\r\n\r\n\r\n  componentDidMount() {\r\n    socket.on('load gamescreen', (type, name) => {\r\n      this.setState({type: type, name: name});\r\n      document.body.style.backgroundColor = 'green';\r\n    })\r\n  }\r\n\r\n  loadPageContent = () => {\r\n    if (this.state.type === \"host\") {\r\n      return <HostScreen/>\r\n    }\r\n    else if (this.state.type === \"player\") {\r\n      return <HostScreen/>\r\n    }\r\n    else {\r\n      return <HostScreen/>\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"center\" }}>\r\n        Game Screen\r\n        {this.state.type ===  \"host\" && <HostScreen />}\r\n        {this.state.type ===  \"player\" && <PlayerScreen />} \r\n        {this.state.type ===  \"player\" && <PlayerScreen />} \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}