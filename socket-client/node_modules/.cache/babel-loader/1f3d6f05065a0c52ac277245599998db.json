{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\Website\\\\mind-reader\\\\socket-client\\\\src\\\\game\\\\player\\\\PlayerScreen.js\";\nimport React from 'react';\nimport { socket } from \"../../service/socket\";\nimport WordTable from \"../assets/WordTable\";\nimport CurrentPlayers from \"../host/CurrentPlayers\";\n\nclass PlayerScreen extends React.Component {\n  constructor() {\n    super();\n\n    this.handleNameChange = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.state = {\n      players: [],\n      wordList: []\n    };\n    socket.emit('fetch wordlist');\n  }\n\n  componentDidMount() {\n    socket.on('toggle screen', s => {\n      console.log('Test');\n      document.body.style.backgroundColor = 'green';\n    });\n    socket.on('update wordList', words => {\n      console.log(\"Updating words\", words);\n      this.setState({\n        wordList: words\n      });\n    });\n    socket.on('update players', players => {\n      var p = [];\n      Object.entries(players).map(player => p.push({\n        \"id\": player[0],\n        \"name\": player[1][\"name\"]\n      }));\n      this.setState({\n        players: p\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(WordTable, {\n        data: {\n          \"wordList\": this.state.wordList,\n          \"players\": this.state.players,\n          \"type\": \"player\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PlayerScreen;","map":{"version":3,"sources":["C:/Users/Daniel/Documents/Website/mind-reader/socket-client/src/game/player/PlayerScreen.js"],"names":["React","socket","WordTable","CurrentPlayers","PlayerScreen","Component","constructor","handleNameChange","event","setState","name","target","value","state","players","wordList","emit","componentDidMount","on","s","console","log","document","body","style","backgroundColor","words","p","Object","entries","map","player","push","render","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAyBdC,gBAzBc,GAyBMC,KAAD,IAAW;AAC5B,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAApB,OAAd;AACD,KA3Ba;;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAIAd,IAAAA,MAAM,CAACe,IAAP,CAAY,gBAAZ;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBhB,IAAAA,MAAM,CAACiB,EAAP,CAAU,eAAV,EAA4BC,CAAD,IAAO;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;AACD,KAHD;AAIAxB,IAAAA,MAAM,CAACiB,EAAP,CAAU,iBAAV,EAA8BQ,KAAD,IAAW;AACpCN,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BK,KAA9B;AACA,WAAKjB,QAAL,CAAc;AAACM,QAAAA,QAAQ,EAAEW;AAAX,OAAd;AACH,KAHD;AAIAzB,IAAAA,MAAM,CAACiB,EAAP,CAAU,gBAAV,EAA6BJ,OAAD,IAAa;AACrC,UAAIa,CAAC,GAAG,EAAR;AACAC,MAAAA,MAAM,CAACC,OAAP,CAAef,OAAf,EAAwBgB,GAAxB,CAA4BC,MAAM,IAAIJ,CAAC,CAACK,IAAF,CAAO;AAAC,cAAKD,MAAM,CAAC,CAAD,CAAZ;AAAiB,gBAAOA,MAAM,CAAC,CAAD,CAAN,CAAU,MAAV;AAAxB,OAAP,CAAtC;AACA,WAAKtB,QAAL,CAAc;AAACK,QAAAA,OAAO,EAAEa;AAAV,OAAd;AACH,KAJD;AAKD;;AAODM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAE;AAAC,sBAAW,KAAKrB,KAAL,CAAWE,QAAvB;AAAiC,qBAAU,KAAKF,KAAL,CAAWC,OAAtD;AAA+D,kBAAO;AAAtE;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AArCwC;;AAwC3C,eAAeV,YAAf","sourcesContent":["import React from 'react';\r\nimport {socket} from \"../../service/socket\";\r\nimport WordTable from \"../assets/WordTable\"\r\nimport CurrentPlayers from \"../host/CurrentPlayers\"\r\n\r\nclass PlayerScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      players: [],\r\n      wordList: []\r\n    };\r\n    socket.emit('fetch wordlist')\r\n  }\r\n    \r\n  componentDidMount() {\r\n    socket.on('toggle screen', (s) => {\r\n      console.log('Test')\r\n      document.body.style.backgroundColor = 'green';\r\n    })\r\n    socket.on('update wordList', (words) => {\r\n        console.log(\"Updating words\", words)\r\n        this.setState({wordList: words});\r\n    })  \r\n    socket.on('update players', (players) => {\r\n        var p = [];\r\n        Object.entries(players).map(player => p.push({\"id\":player[0], \"name\":player[1][\"name\"]}));\r\n        this.setState({players: p});\r\n    })\r\n  }\r\n\r\n  handleNameChange = (event) => {\r\n    this.setState({name: event.target.value});\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <WordTable data={{\"wordList\":this.state.wordList, \"players\":this.state.players, \"type\":\"player\"}} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerScreen;"]},"metadata":{},"sourceType":"module"}