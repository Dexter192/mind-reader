{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\Website\\\\mind-reader\\\\socket-client\\\\src\\\\game\\\\util\\\\Score.js\";\nimport React from 'react';\nimport { socket } from \"../../service/socket\";\n\nclass Score extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.drawScoreBar = () => {\n      var colours = ['#8934B8', '#0A53DE', '#24D024', '#FBF21A', '#FB6F24', '#EA0D0D'];\n      var players = this.props.data[\"players\"];\n      var w = 100 / players.length - 0.6 + \"vw\";\n      var index = 1;\n      return players.map(player => {\n        index = (index + 1) % colours.length;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: w,\n            color: colours[index]\n          },\n          className: \"playerScore\",\n          children: [player[\"name\"], \" - \", player[\"score\"]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: this.drawScoreBar()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Score;","map":{"version":3,"sources":["C:/Users/Daniel/Documents/Website/mind-reader/socket-client/src/game/util/Score.js"],"names":["React","socket","Score","Component","drawScoreBar","colours","players","props","data","w","length","index","map","player","width","color","render"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,sBAArB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAElCC,YAFkC,GAEnB,MAAM;AACnB,UAAIC,OAAO,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,CAAd;AACA,UAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgB,SAAhB,CAAd;AACA,UAAIC,CAAC,GAAI,MAAIH,OAAO,CAACI,MAAb,GAAqB,GAArB,GAAyB,IAAjC;AACA,UAAIC,KAAK,GAAG,CAAZ;AACA,aAAOL,OAAO,CAACM,GAAR,CAAYC,MAAM,IAAI;AAC3BF,QAAAA,KAAK,GAAG,CAACA,KAAK,GAAC,CAAP,IAAUN,OAAO,CAACK,MAA1B;AACA,4BACE;AAAK,UAAA,KAAK,EAAE;AAACI,YAAAA,KAAK,EAAEL,CAAR;AAAWM,YAAAA,KAAK,EAACV,OAAO,CAACM,KAAD;AAAxB,WAAZ;AAA8C,UAAA,SAAS,EAAC,aAAxD;AAAA,qBAAuEE,MAAM,CAAC,MAAD,CAA7E,SAA0FA,MAAM,CAAC,OAAD,CAAhG;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OALM,CAAP;AAMD,KAbiC;AAAA;;AAelCG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACG,KAAKZ,YAAL;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AArBiC;;AAwBpC,eAAeF,KAAf","sourcesContent":["\r\nimport React from 'react';\r\nimport {socket} from \"../../service/socket\";\r\n\r\nclass Score extends React.Component {  \r\n\r\n  drawScoreBar = () => {\r\n    var colours = ['#8934B8', '#0A53DE', '#24D024', '#FBF21A', '#FB6F24', '#EA0D0D']\r\n    var players = this.props.data[\"players\"]\r\n    var w = (100/players.length)-0.6+\"vw\"\r\n    var index = 1\r\n    return players.map(player => {\r\n      index = (index+1)%colours.length\r\n      return (\r\n        <div style={{width: w, color:colours[index]}} className=\"playerScore\">{player[\"name\"]} - {player[\"score\"]}</div>\r\n      )\r\n    })\r\n  }\r\n    \r\n  render() {\r\n    return (\r\n      <div className=\"score\">\r\n        {this.drawScoreBar()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Score;"]},"metadata":{},"sourceType":"module"}