{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\Website\\\\mind-reader\\\\socket-client\\\\src\\\\game\\\\assets\\\\WordTable.js\";\nimport React from 'react'; //import Word from \"../assets/Word\";\n\nclass WordTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.buildWordList = () => {\n      console.log(\"WordList:::\", this.props.wordList);\n\n      if (this.props.wordList[\"type\"] === \"host\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.props.wordList[\"wordList\"].map(word => /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"1 - \", word[\"word\"], \" - \", word[\"guesses\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }, this);\n      }\n\n      if (this.props.wordList[\"type\"] === \"player\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.props.wordList[\"wordList\"].map(word => /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"???? - \", this.props.wordList[\"type\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: this.buildWordList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default WordTable;","map":{"version":3,"sources":["C:/Users/Daniel/Documents/Website/mind-reader/socket-client/src/game/assets/WordTable.js"],"names":["React","WordTable","Component","buildWordList","console","log","props","wordList","map","word","render","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SACtCC,aADsC,GACtB,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKC,KAAL,CAAWC,QAAtC;;AACA,UAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoB,MAApB,MAAgC,MAAnC,EAA2C;AACvC,4BACA;AAAA,oBACG,KAAKD,KAAL,CAAWC,QAAX,CAAoB,UAApB,EAAgCC,GAAhC,CAAoCC,IAAI,iBACvC;AAAA,+BAASA,IAAI,CAAC,MAAD,CAAb,SAA0BA,IAAI,CAAC,SAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADA;AAMA;;AACJ,UAAG,KAAKH,KAAL,CAAWC,QAAX,CAAoB,MAApB,MAAgC,QAAnC,EAA6C;AAC3C,4BACE;AAAA,oBACG,KAAKD,KAAL,CAAWC,QAAX,CAAoB,UAApB,EAAgCC,GAAhC,CAAoCC,IAAI,iBACvC;AAAA,kCAAY,KAAKH,KAAL,CAAWC,QAAX,CAAoB,MAApB,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AAME;AACL,KAnBqC;AAAA;;AAqBtCG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,gBACG,KAAKR,aAAL;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA3BqC;;AA8BxC,eAAeF,SAAf","sourcesContent":["import React from 'react';\r\n//import Word from \"../assets/Word\";\r\n\r\nclass WordTable extends React.Component {  \r\n  buildWordList = () => {\r\n    console.log(\"WordList:::\", this.props.wordList);\r\n    if(this.props.wordList[\"type\"] === \"host\") {\r\n        return (\r\n        <div>\r\n          {this.props.wordList[\"wordList\"].map(word => \r\n            <h1>1 - {word[\"word\"]} - {word[\"guesses\"]}</h1>   \r\n          )}\r\n        </div>\r\n      )}\r\n    if(this.props.wordList[\"type\"] === \"player\") {\r\n      return (\r\n        <div>\r\n          {this.props.wordList[\"wordList\"].map(word => \r\n            <h1>???? - {this.props.wordList[\"type\"]}</h1>   \r\n          )}\r\n        </div>\r\n      )}\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"center\" }}>\r\n        {this.buildWordList()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WordTable;"]},"metadata":{},"sourceType":"module"}