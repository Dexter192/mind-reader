{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\Website\\\\mind-reader\\\\socket-client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { socket } from \"./service/socket\";\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\nimport Home from './Home';\nimport Game from './Game';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.send = () => {\n      console.log('client');\n      socket.emit('change color', this.state.color);\n    };\n\n    this.setColor = color => {\n      console.log('Change Color');\n      this.setState({\n        color\n      });\n    };\n\n    console.log('Connect');\n    this.state = {\n      color: 'white',\n      state: 'Home'\n    };\n  }\n\n  subscribeToTimer(cb) {\n    socket.on('toggle screen', s => {\n      console.log(\"Set Screen to \", s);\n      this.state.screen = s;\n    });\n  } // sending sockets\n\n\n  render() {\n    console.log('client');\n    socket.on('change color', col => {\n      document.body.style.backgroundColor = col;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [(this.state.screen === undefined || this.state.screen === \"Home\") && /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 79\n      }, this), this.state.screen === \"Game\" && /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.send(),\n          children: \"Change Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"blue\",\n          onClick: () => this.setColor('blue'),\n          children: \"Blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"red\",\n          onClick: () => this.setColor('red'),\n          children: \"Red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nApp.propTypes = {\n  cookies: instanceOf(Cookies)\n};\nexport default _c = withCookies(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Daniel/Documents/Website/mind-reader/socket-client/src/App.js"],"names":["React","Component","socket","instanceOf","withCookies","Cookies","Home","Game","App","constructor","props","send","console","log","emit","state","color","setColor","setState","subscribeToTimer","cb","on","s","screen","render","col","document","body","style","backgroundColor","undefined","textAlign","propTypes","cookies"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,cAArC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAK1BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiBnBC,IAjBmB,GAiBZ,MAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAX,MAAAA,MAAM,CAACY,IAAP,CAAY,cAAZ,EAA4B,KAAKC,KAAL,CAAWC,KAAvC;AACD,KApBkB;;AAAA,SAyBnBC,QAzBmB,GAyBPD,KAAD,IAAW;AACpBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,WAAKK,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACD,KA5BkB;;AAEjBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,SAAKE,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,OADI;AAEXD,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AAEDI,EAAAA,gBAAgB,CAACC,EAAD,EAAK;AACnBlB,IAAAA,MAAM,CAACmB,EAAP,CAAU,eAAV,EAA4BC,CAAD,IAAO;AAChCV,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BS,CAA9B;AACA,WAAKP,KAAL,CAAWQ,MAAX,GAAqBD,CAArB;AACD,KAHD;AAID,GAnByB,CAqB1B;;;AAcAE,EAAAA,MAAM,GAAG;AACPZ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAX,IAAAA,MAAM,CAACmB,EAAP,CAAU,cAAV,EAA2BI,GAAD,IAAS;AACjCC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsCJ,GAAtC;AACD,KAFD;AAGA,wBACE;AAAA,iBACG,CAAC,KAAKV,KAAL,CAAWQ,MAAX,KAAsBO,SAAtB,IAAmC,KAAKf,KAAL,CAAWQ,MAAX,KAAsB,MAA1D,kBAAqE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADxE,EAEG,KAAKR,KAAL,CAAWQ,MAAX,KAAsB,MAAtB,iBAAgC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFnC,eAGE;AAAK,QAAA,KAAK,EAAE;AAAEQ,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKpB,IAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,EAAE,EAAC,MAAX;AAAkB,UAAA,OAAO,EAAE,MAAM,KAAKM,QAAL,CAAc,MAAd,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,EAAE,EAAC,KAAX;AAAiB,UAAA,OAAO,EAAE,MAAM,KAAKA,QAAL,CAAc,KAAd,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAnDyB;;AAAtBT,G,CACGwB,S,GAAY;AACjBC,EAAAA,OAAO,EAAE9B,UAAU,CAACE,OAAD;AADF,C;AAqDrB,oBAAeD,WAAW,CAACI,GAAD,CAA1B","sourcesContent":["import React, { Component } from \"react\";\nimport {socket} from \"./service/socket\";\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\nimport Home from './Home';\nimport Game from './Game';\n\nclass App extends Component {\n  static propTypes = {\n    cookies: instanceOf(Cookies)\n  };\n\n  constructor(props) {\n    super(props);\n    console.log('Connect')\n    this.state = {\n      color: 'white',\n      state: 'Home'\n    };\n  }\n\n  subscribeToTimer(cb) {\n    socket.on('toggle screen', (s) => {\n      console.log(\"Set Screen to \", s)\n      this.state.screen =  s;\n    })\n  }\n\n  // sending sockets\n  send = () => {\n    console.log('client')\n    socket.emit('change color', this.state.color) \n  }\n\n  ///\n  \n  // adding the function\n  setColor = (color) => {\n    console.log('Change Color')\n    this.setState({ color })\n  }\n\n  render() {\n    console.log('client')\n    socket.on('change color', (col) => {\n      document.body.style.backgroundColor = col\n    })\n    return (\n      <div>\n        {(this.state.screen === undefined || this.state.screen === \"Home\") && <Home />}\n        {this.state.screen === \"Game\" && <Game />}\n        <div style={{ textAlign: \"center\" }}>\n          <button onClick={() => this.send() }>Change Color</button>\n          <button id=\"blue\" onClick={() => this.setColor('blue')}>Blue</button> \n          <button id=\"red\" onClick={() => this.setColor('red')}>Red</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withCookies(App);"]},"metadata":{},"sourceType":"module"}