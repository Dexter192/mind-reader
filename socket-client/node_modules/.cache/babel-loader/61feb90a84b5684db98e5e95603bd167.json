{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/daniel/mind-reader/socket-client/src/game/host/HostScreen.js\";\nimport React from 'react';\nimport { socket } from \"../../service/socket\";\nimport CurrentPlayers from \"./CurrentPlayers\";\nimport WordMenu from \"./WordMenu\";\nimport WordTable from \"../util/WordTable\";\nimport Timer from \"../util/Timer\";\nimport Score from \"../util/Score\";\n\nclass HostScreen extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      players: [],\n      wordList: []\n    };\n    socket.emit('fetch wordlist');\n  }\n\n  componentDidMount() {\n    socket.on('toggle screen', s => {\n      console.log('Test');\n    });\n    socket.on('update wordList', words => {\n      console.log(\"Updating words\", words);\n      this.setState({\n        wordList: words\n      });\n    });\n  }\n\n  setPlayerList(playerList) {\n    console.log(\"Player list in parent\");\n    console.log(playerList);\n    this.setState({\n      players: playerList\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Mind-Reader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CurrentPlayers, {\n        data: {\n          setPlayerList: this.setPlayerList.bind(this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WordMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        data: {\n          \"type\": \"host\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WordTable, {\n        data: {\n          \"wordList\": this.state.wordList,\n          \"players\": this.state.players,\n          \"type\": \"host\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Score, {\n        data: {\n          \"players\": this.state.players,\n          \"type\": \"host\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default HostScreen;","map":{"version":3,"sources":["/home/daniel/mind-reader/socket-client/src/game/host/HostScreen.js"],"names":["React","socket","CurrentPlayers","WordMenu","WordTable","Timer","Score","HostScreen","Component","constructor","state","players","wordList","emit","componentDidMount","on","s","console","log","words","setState","setPlayerList","playerList","render","bind"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,sBAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,MAAMC,UAAN,SAAyBP,KAAK,CAACQ,SAA/B,CAAyC;AAEvCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAIAX,IAAAA,MAAM,CAACY,IAAP,CAAY,gBAAZ;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBb,IAAAA,MAAM,CAACc,EAAP,CAAU,eAAV,EAA4BC,CAAD,IAAO;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,KAFD;AAGAjB,IAAAA,MAAM,CAACc,EAAP,CAAU,iBAAV,EAA8BI,KAAD,IAAW;AACpCF,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,KAA9B;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,QAAQ,EAAEO;AAAX,OAAd;AACH,KAHD;AAID;;AAEDE,EAAAA,aAAa,CAACC,UAAD,EAAa;AACxBL,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYI,UAAZ;AACA,SAAKF,QAAL,CAAc;AAACT,MAAAA,OAAO,EAAEW;AAAV,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAE;AAACF,UAAAA,aAAa,EAAC,KAAKA,aAAL,CAAmBG,IAAnB,CAAwB,IAAxB;AAAf;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE;AAAC,kBAAO;AAAR;AAAb;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAE;AAAC,sBAAW,KAAKd,KAAL,CAAWE,QAAvB;AAAiC,qBAAU,KAAKF,KAAL,CAAWC,OAAtD;AAA+D,kBAAO;AAAtE;AAAjB;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE;AAAC,qBAAU,KAAKD,KAAL,CAAWC,OAAtB;AAA+B,kBAAO;AAAtC;AAAb;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAtCsC;;AAyCzC,eAAeJ,UAAf","sourcesContent":["import React from 'react';\nimport {socket} from \"../../service/socket\";\nimport CurrentPlayers from \"./CurrentPlayers\"\nimport WordMenu from \"./WordMenu\"\nimport WordTable from \"../util/WordTable\"\nimport Timer from \"../util/Timer\"\nimport Score from \"../util/Score\"\n\nclass HostScreen extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      players: [],\n      wordList: []\n    };\n    socket.emit('fetch wordlist')\n  }   \n    \n  componentDidMount() {\n    socket.on('toggle screen', (s) => {\n      console.log('Test')\n    })\n    socket.on('update wordList', (words) => {\n        console.log(\"Updating words\", words)\n        this.setState({wordList: words});\n    })  \n  }\n\n  setPlayerList(playerList) {\n    console.log(\"Player list in parent\")\n    console.log(playerList)\n    this.setState({players: playerList});\n  }\n\n  render() {\n    return (\n      <div className=\"root\">\n        <h1 className=\"title\">Mind-Reader</h1>\n        <CurrentPlayers data={{setPlayerList:this.setPlayerList.bind(this)}}/>\n        <WordMenu/>\n        <Timer data={{\"type\":\"host\"}}/>\n        <WordTable data={{\"wordList\":this.state.wordList, \"players\":this.state.players, \"type\":\"host\"}} />\n        <Score data={{\"players\":this.state.players, \"type\":\"host\"}}/>\n      </div>\n    );\n  }\n}\n\nexport default HostScreen;"]},"metadata":{},"sourceType":"module"}