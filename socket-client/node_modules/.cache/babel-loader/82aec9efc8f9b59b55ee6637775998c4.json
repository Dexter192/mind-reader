{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\Website\\\\mind-reader\\\\socket-client\\\\src\\\\game\\\\util\\\\Timer.js\";\nimport React from 'react';\nimport { socket } from \"../../service/socket\";\n\nclass Timer extends React.Component {\n  startTimer() {\n    socket.emit('timer');\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n    let seconds = this.state.seconds - 1;\n    this.setState({\n      time: this.secondsToTime(seconds),\n      seconds: seconds\n    }); // Check if we're at zero.\n\n    if (seconds == 0) {\n      clearInterval(this.timer);\n    }\n  }\n\n  drawTimer() {\n    if (this.props.data.type === \"host\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.startTimer,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.state.time.m, \":\", this.state.time.s]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Timer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [this.state.time.m, \":\", this.state.time.s]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n\n  render() {\n    return this.drawTimer();\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["C:/Users/Daniel/Documents/Website/mind-reader/socket-client/src/game/util/Timer.js"],"names":["React","socket","Timer","Component","startTimer","emit","countDown","seconds","state","setState","time","secondsToTime","clearInterval","timer","drawTimer","props","data","type","m","s","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,sBAArB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAChCC,EAAAA,UAAU,GAAG;AACXH,IAAAA,MAAM,CAACI,IAAP,CAAY,OAAZ;AACD;;AAEDC,EAAAA,SAAS,GAAG;AACV;AACA,QAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAAX,GAAqB,CAAnC;AACA,SAAKE,QAAL,CAAc;AACZC,MAAAA,IAAI,EAAE,KAAKC,aAAL,CAAmBJ,OAAnB,CADM;AAEZA,MAAAA,OAAO,EAAEA;AAFG,KAAd,EAHU,CAQV;;AACA,QAAIA,OAAO,IAAI,CAAf,EAAkB;AAChBK,MAAAA,aAAa,CAAC,KAAKC,KAAN,CAAb;AACD;AACF;;AAEDC,EAAAA,SAAS,GAAG;AACV,QAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,KAAyB,MAA5B,EAAoC;AAClC,0BACE;AAAA,gCACA;AAAQ,UAAA,OAAO,EAAE,KAAKb,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA,qBAAI,KAAKI,KAAL,CAAWE,IAAX,CAAgBQ,CAApB,OAAwB,KAAKV,KAAL,CAAWE,IAAX,CAAgBS,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAA,mBAAI,KAAKX,KAAL,CAAWE,IAAX,CAAgBQ,CAApB,OAAwB,KAAKV,KAAL,CAAWE,IAAX,CAAgBS,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,KAAKN,SAAL,EADF;AAGD;;AAvC+B;;AA0ClC,eAAeZ,KAAf","sourcesContent":["import React from 'react';\r\nimport {socket} from \"../../service/socket\";\r\n\r\nclass Timer extends React.Component {\r\n    startTimer() {\r\n      socket.emit('timer')\r\n    }\r\n  \r\n    countDown() {\r\n      // Remove one second, set state so a re-render happens.\r\n      let seconds = this.state.seconds - 1;\r\n      this.setState({\r\n        time: this.secondsToTime(seconds),\r\n        seconds: seconds,\r\n      });\r\n      \r\n      // Check if we're at zero.\r\n      if (seconds == 0) { \r\n        clearInterval(this.timer);\r\n      }\r\n    }\r\n    \r\n    drawTimer() {\r\n      if(this.props.data.type === \"host\") {\r\n        return (\r\n          <div>  \r\n          <button onClick={this.startTimer}>Start</button>\r\n          <p>{this.state.time.m}:{this.state.time.s}</p>\r\n          </div>\r\n        )\r\n      }\r\n      return (\r\n        <div className=\"Timer\">\r\n          <p>{this.state.time.m}:{this.state.time.s}</p>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    render() {\r\n      return(\r\n        this.drawTimer()\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Timer;"]},"metadata":{},"sourceType":"module"}