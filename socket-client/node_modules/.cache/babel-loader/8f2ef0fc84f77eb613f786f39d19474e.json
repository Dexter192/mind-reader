{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\Website\\\\mind-reader\\\\socket-client\\\\src\\\\game\\\\assets\\\\WordTable.js\";\nimport React from 'react';\nimport { socket } from \"../../service/socket\";\n\nclass WordTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.buildWordList = () => {\n      console.log(\"WordList:::\", this.props.data);\n      console.log(\"Players:::\", this.props);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.data[\"wordList\"].map((word, index) => this.buildWord(index, word, this.props.data[\"players\"], this.props.data[\"type\"]))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this);\n    };\n\n    this.toggleWordVisibility = index => {\n      socket.emit('toggle word visibility', index);\n    };\n\n    this.buildWord = (index, word, players, type) => {\n      console.log(\"visible\".repeat(word[\"visible\"]));\n\n      if (type === \"host\") {\n        var visibleClass = \"not\".repeat(word[\"visible\"]) + \"visible\";\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: visibleClass,\n              onClick: () => this.toggleWordVisibility(index),\n              children: word[\"word\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), \" - \", word[\"guesses\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [players.map(player => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [player[\"name\"], \" + \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 39\n            }, this)), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this);\n      }\n\n      if (type === \"player\") {\n        if (word[\"visible\"]) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"?????\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [word[\"word\"], \" - \", word[\"guesses\"]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: players.map(player => {\n                /*#__PURE__*/\n                _jsxDEV(\"span\", {\n                  children: [player[\"name\"], \" + \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 17\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this);\n        }\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Problem loading game content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }, this);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: this.buildWordList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default WordTable;","map":{"version":3,"sources":["C:/Users/Daniel/Documents/Website/mind-reader/socket-client/src/game/assets/WordTable.js"],"names":["React","socket","WordTable","Component","buildWordList","console","log","props","data","map","word","index","buildWord","toggleWordVisibility","emit","players","type","repeat","visibleClass","player","render","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {socket} from \"../../service/socket\";\r\n\r\nclass WordTable extends React.Component {  \r\n\r\n  buildWordList = () => {\r\n    console.log(\"WordList:::\", this.props.data);\r\n    console.log(\"Players:::\", this.props);\r\n    \r\n    return (\r\n        <div>\r\n          {this.props.data[\"wordList\"].map((word, index) => \r\n            this.buildWord(index, word, this.props.data[\"players\"], this.props.data[\"type\"]) \r\n          )}\r\n        </div>\r\n      )\r\n  }\r\n\r\n  toggleWordVisibility = (index) => {\r\n    socket.emit('toggle word visibility', index);\r\n  }\r\n\r\n  buildWord = (index, word, players, type) => {\r\n    console.log(\"visible\".repeat(word[\"visible\"]))\r\n    if(type === \"host\") {\r\n      var visibleClass = \"not\".repeat(word[\"visible\"]) + \"visible\";\r\n      return (\r\n        <div>\r\n          <h1><span className={visibleClass} onClick={() => this.toggleWordVisibility(index)}>{word[\"word\"]}</span> - {word[\"guesses\"]}</h1>\r\n          <div>{players.map(player => <span>{player[\"name\"]} + </span>)} </div>\r\n        </div>\r\n      )\r\n    }\r\n    if(type === \"player\") {\r\n        if(word[\"visible\"]) {\r\n          return (\r\n            <div>\r\n              <h1>?????</h1>\r\n            </div>\r\n            )        \r\n        } else {\r\n          return (\r\n            <div>\r\n              <h1>{word[\"word\"]} - {word[\"guesses\"]}</h1>\r\n              <div>{players.map(player => {\r\n                <span>{player[\"name\"]} + </span>\r\n                })} \r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n    return <p>Problem loading game content</p>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"center\" }}>\r\n        {this.buildWordList()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WordTable;"]},"metadata":{},"sourceType":"module"}