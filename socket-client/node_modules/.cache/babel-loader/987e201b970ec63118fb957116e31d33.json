{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\Website\\\\mind-reader\\\\socket-client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.send = () => {\n      console.log('client'); //const socket = socketIOClient(this.state.endpoint);\n      //socket.emit('change color', this.state.color) \n    };\n\n    this.setColor = color => {\n      console.log('Change Color');\n      this.setState({\n        color\n      });\n    };\n\n    this.state = {\n      endpoint: \"http://localhost:4001\",\n      color: 'white'\n    };\n  } // sending sockets\n\n\n  ///\n  render() {\n    const socket = socketIOClient(this.state.endpoint);\n    socket.on('change color', col => {\n      document.body.style.backgroundColor = col;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.send(),\n        children: \"Change Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"blue\",\n        onClick: () => this.setColor('blue'),\n        children: \"Blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"red\",\n        onClick: () => this.setColor('red'),\n        children: \"Red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Daniel/Documents/Website/mind-reader/socket-client/src/App.js"],"names":["React","Component","socketIOClient","App","constructor","send","console","log","setColor","color","setState","state","endpoint","render","socket","on","col","document","body","style","backgroundColor","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,IATc,GASP,MAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EADW,CAEX;AACA;AACD,KAba;;AAAA,SAkBdC,QAlBc,GAkBFC,KAAD,IAAW;AACpBH,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,WAAKG,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KArBa;;AAEZ,SAAKE,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,uBADC;AAEXH,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID,GAPyB,CAS1B;;;AAeA;AAEAI,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAGZ,cAAc,CAAC,KAAKS,KAAL,CAAWC,QAAZ,CAA7B;AACAE,IAAAA,MAAM,CAACC,EAAP,CAAU,cAAV,EAA2BC,GAAD,IAAS;AACjCC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsCJ,GAAtC;AACD,KAFD;AAIA,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEK,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKhB,IAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,EAAE,EAAC,MAAX;AAAkB,QAAA,OAAO,EAAE,MAAM,KAAKG,QAAL,CAAc,MAAd,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,EAAE,EAAC,KAAX;AAAiB,QAAA,OAAO,EAAE,MAAM,KAAKA,QAAL,CAAc,KAAd,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAvCyB;;AAyC5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      endpoint: \"http://localhost:4001\",      \n      color: 'white'\n    };\n  }\n\n  // sending sockets\n  send = () => {\n    console.log('client')\n    //const socket = socketIOClient(this.state.endpoint);\n    //socket.emit('change color', this.state.color) \n  }\n\n  ///\n  \n  // adding the function\n  setColor = (color) => {\n    console.log('Change Color')\n    this.setState({ color })\n  }\n  \n  ///\n\n  render() {\n    const socket = socketIOClient(this.state.endpoint);\n    socket.on('change color', (col) => {\n      document.body.style.backgroundColor = col\n    })\n\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <button onClick={() => this.send() }>Change Color</button>\n        <button id=\"blue\" onClick={() => this.setColor('blue')}>Blue</button>\n        <button id=\"red\" onClick={() => this.setColor('red')}>Red</button>\n      </div>\n    )\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}