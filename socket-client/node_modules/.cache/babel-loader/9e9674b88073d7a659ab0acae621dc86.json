{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\Website\\\\mind-reader\\\\socket-client\\\\src\\\\game\\\\assets\\\\WordTable.js\";\nimport React from 'react';\n\nclass WordTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.buildWordList = () => {\n      console.log(\"WordList:::\", this.props.data);\n      console.log(\"Players:::\", this.props);\n\n      if (this.props.data[\"type\"] === \"host\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.props.data[\"wordList\"].map(word => this.buildWord(word, word[\"visible\"], this.props.data[\"players\"], \"host\"))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 9\n        }, this);\n      }\n\n      if (this.props.data[\"type\"] === \"player\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.props.data[\"wordList\"].map(word => {\n            console.log(word);\n\n            if (word[\"visible\"]) {\n              return /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [\"1 - \", word[\"word\"], \" - \", word[\"guesses\"]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 24\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [\"???? - \", this.props.data[\"type\"]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 24\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.buildWord = (word, isVisible, players, type) => {\n      if (type === \"host\") {\n        return;\n\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [word[\"word\"], \" - \", word[\"guesses\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), players.map(player => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: player[\"name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 10\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }, this);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: this.buildWordList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default WordTable;","map":{"version":3,"sources":["C:/Users/Daniel/Documents/Website/mind-reader/socket-client/src/game/assets/WordTable.js"],"names":["React","WordTable","Component","buildWordList","console","log","props","data","map","word","buildWord","isVisible","players","type","player","render","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAEtCC,aAFsC,GAEtB,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKC,KAAL,CAAWC,IAAtC;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKC,KAA/B;;AACA,UAAG,KAAKA,KAAL,CAAWC,IAAX,CAAgB,MAAhB,MAA4B,MAA/B,EAAuC;AACnC,4BACA;AAAA,oBACG,KAAKD,KAAL,CAAWC,IAAX,CAAgB,UAAhB,EAA4BC,GAA5B,CAAgCC,IAAI,IACnC,KAAKC,SAAL,CAAeD,IAAf,EAAqBA,IAAI,CAAC,SAAD,CAAzB,EAAsC,KAAKH,KAAL,CAAWC,IAAX,CAAgB,SAAhB,CAAtC,EAAkE,MAAlE,CADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADA;AAMA;;AACJ,UAAG,KAAKD,KAAL,CAAWC,IAAX,CAAgB,MAAhB,MAA4B,QAA/B,EAAyC;AACvC,4BACE;AAAA,oBACG,KAAKD,KAAL,CAAWC,IAAX,CAAgB,UAAhB,EAA4BC,GAA5B,CAAgCC,IAAI,IACnC;AACEL,YAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;;AACA,gBAAGA,IAAI,CAAC,SAAD,CAAP,EAAoB;AAClB,kCAAO;AAAA,mCAASA,IAAI,CAAC,MAAD,CAAb,SAA0BA,IAAI,CAAC,SAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFD,MAGK;AACH,kCAAO;AAAA,sCAAY,KAAKH,KAAL,CAAWC,IAAX,CAAgB,MAAhB,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;AACF,WATF;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AAcE;AACL,KA7BqC;;AAAA,SA+BtCG,SA/BsC,GA+B1B,CAACD,IAAD,EAAOE,SAAP,EAAkBC,OAAlB,EAA2BC,IAA3B,KAAoC;AAC9C,UAAGA,IAAI,KAAK,MAAZ,EAAoB;AAClB;;AACG;AAAA;AAAA,kCACG;AAAA,uBAAKJ,IAAI,CAAC,MAAD,CAAT,SAAsBA,IAAI,CAAC,SAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,EAEMG,OAAO,CAACJ,GAAR,CAAYM,MAAM,iBACjB;AAAA,sBAAIA,MAAM,CAAC,MAAD;AAAV;AAAA;AAAA;AAAA;AAAA,kBADD,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAMJ;;AACD,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAED,KA3CqC;AAAA;;AA6CtCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,gBACG,KAAKb,aAAL;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAnDqC;;AAsDxC,eAAeF,SAAf","sourcesContent":["import React from 'react';\r\n\r\nclass WordTable extends React.Component {  \r\n\r\n  buildWordList = () => {\r\n    console.log(\"WordList:::\", this.props.data);\r\n    console.log(\"Players:::\", this.props);\r\n    if(this.props.data[\"type\"] === \"host\") {\r\n        return (\r\n        <div>\r\n          {this.props.data[\"wordList\"].map(word =>\r\n            this.buildWord(word, word[\"visible\"], this.props.data[\"players\"], \"host\") \r\n          )}\r\n        </div>\r\n      )}\r\n    if(this.props.data[\"type\"] === \"player\") {\r\n      return (\r\n        <div>\r\n          {this.props.data[\"wordList\"].map(word => \r\n            {\r\n              console.log(word)\r\n              if(word[\"visible\"]) {\r\n                return <h1>1 - {word[\"word\"]} - {word[\"guesses\"]}</h1>\r\n              }\r\n              else {\r\n                return <h1>???? - {this.props.data[\"type\"]}</h1>\r\n              }\r\n            }   \r\n          )}\r\n        </div>\r\n      )}\r\n  }\r\n\r\n  buildWord = (word, isVisible, players, type) => {\r\n    if(type === \"host\") {\r\n      return\r\n         <div>\r\n            <h1>{word[\"word\"]} - {word[\"guesses\"]}</h1>\r\n              {players.map(player =>\r\n                <p>{player[\"name\"]}</p>\r\n              )} \r\n          </div>\r\n    }\r\n    return <p>Hi</p>\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"center\" }}>\r\n        {this.buildWordList()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WordTable;"]},"metadata":{},"sourceType":"module"}