{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\Website\\\\mind-reader\\\\socket-client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { socket } from \"./service/socket\";\nimport { useCookies } from 'react-cookie';\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.send = () => {\n      console.log('client');\n      socket.emit('change color', this.state.color);\n    };\n\n    this.setColor = color => {\n      console.log('Change Color');\n      this.setState({\n        color\n      });\n    };\n\n    this.login = event => {\n      event.preventDefault();\n\n      if (this.state.name === undefined) {\n        alert('Name not set');\n        return;\n      }\n\n      console.log('Logging', this.state.name, 'in as', event.target.name);\n      const {\n        cookies\n      } = this.props;\n      cookies.set('name', name, {\n        path: '/'\n      });\n    };\n\n    this.handleNameChange = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    console.log('Connect');\n    this.state = {\n      color: 'white'\n    };\n  } // sending sockets\n\n\n  ///\n  render() {\n    console.log('client');\n    socket.on('change color', col => {\n      document.body.style.backgroundColor = col;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.send(),\n          children: \"Change Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"blue\",\n          onClick: () => this.setColor('blue'),\n          children: \"Blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"red\",\n          onClick: () => this.setColor('red'),\n          children: \"Red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Player name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            onChange: this.handleNameChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 85\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            onClick: this.login,\n            name: \"host\",\n            value: \"Host\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            onClick: this.login,\n            name: \"player\",\n            value: \"Player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nApp.propTypes = {\n  cookies: instanceOf(Cookies).isRequired\n};\nexport default App;","map":{"version":3,"sources":["C:/Users/Daniel/Documents/Website/mind-reader/socket-client/src/App.js"],"names":["React","Component","socket","useCookies","instanceOf","withCookies","Cookies","App","constructor","send","console","log","emit","state","color","setColor","setState","login","event","preventDefault","name","undefined","alert","target","cookies","props","set","path","handleNameChange","value","render","on","col","document","body","style","backgroundColor","textAlign","propTypes","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,cAArC;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAK1BO,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,IATc,GASP,MAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAT,MAAAA,MAAM,CAACU,IAAP,CAAY,cAAZ,EAA4B,KAAKC,KAAL,CAAWC,KAAvC;AACD,KAZa;;AAAA,SAiBdC,QAjBc,GAiBFD,KAAD,IAAW;AACpBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,WAAKK,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACD,KApBa;;AAAA,SAyBdG,KAzBc,GAyBLC,KAAD,IAAW;AACjBA,MAAAA,KAAK,CAACC,cAAN;;AACA,UAAG,KAAKN,KAAL,CAAWO,IAAX,KAAoBC,SAAvB,EAAkC;AAChCC,QAAAA,KAAK,CAAC,cAAD,CAAL;AACA;AACD;;AACDZ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKE,KAAL,CAAWO,IAAlC,EAAwC,OAAxC,EAAiDF,KAAK,CAACK,MAAN,CAAaH,IAA9D;AACA,YAAM;AAAEI,QAAAA;AAAF,UAAc,KAAKC,KAAzB;AACAD,MAAAA,OAAO,CAACE,GAAR,CAAY,MAAZ,EAAoBN,IAApB,EAA0B;AAAEO,QAAAA,IAAI,EAAE;AAAR,OAA1B;AACD,KAlCa;;AAAA,SAsCdC,gBAtCc,GAsCMV,KAAD,IAAW;AAC5B,WAAKF,QAAL,CAAc;AAACI,QAAAA,IAAI,EAAEF,KAAK,CAACK,MAAN,CAAaM;AAApB,OAAd;AACD,KAxCa;;AAEZnB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,SAAKE,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD,GAXyB,CAa1B;;;AAkCA;AAGAgB,EAAAA,MAAM,GAAG;AACPpB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAT,IAAAA,MAAM,CAAC6B,EAAP,CAAU,cAAV,EAA2BC,GAAD,IAAS;AACjCC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsCJ,GAAtC;AACD,KAFD;AAGA,wBACE;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAAEK,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAK5B,IAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,EAAE,EAAC,MAAX;AAAkB,UAAA,OAAO,EAAE,MAAM,KAAKM,QAAL,CAAc,MAAd,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,EAAE,EAAC,KAAX;AAAiB,UAAA,OAAO,EAAE,MAAM,KAAKA,QAAL,CAAc,KAAd,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,KAAK,EAAE;AAAEsB,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,MAAxB;AAA+B,YAAA,QAAQ,EAAE,KAAKT;AAA9C;AAAA;AAAA;AAAA;AAAA,kBAFF,eAE0E;AAAA;AAAA;AAAA;AAAA,kBAF1E,eAGE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,OAAO,EAAE,KAAKX,KAAnC;AAA0C,YAAA,IAAI,EAAC,MAA/C;AAAsD,YAAA,KAAK,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,OAAO,EAAE,KAAKA,KAAnC;AAA0C,YAAA,IAAI,EAAC,QAA/C;AAAwD,YAAA,KAAK,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAxEyB;;AAAtBV,G,CACG+B,S,GAAY;AACjBd,EAAAA,OAAO,EAAEpB,UAAU,CAACE,OAAD,CAAV,CAAoBiC;AADZ,C;AA0ErB,eAAehC,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {socket} from \"./service/socket\";\nimport { useCookies } from 'react-cookie';\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\n\nclass App extends Component {\n  static propTypes = {\n    cookies: instanceOf(Cookies).isRequired\n  };\n\n  constructor() {\n    super();\n    console.log('Connect')\n    this.state = {\n      color: 'white',\n    };\n  }\n\n  // sending sockets\n  send = () => {\n    console.log('client')\n    socket.emit('change color', this.state.color) \n  }\n\n  ///\n  \n  // adding the function\n  setColor = (color) => {\n    console.log('Change Color')\n    this.setState({ color })\n  }\n  \n  ///\n\n  // set cookie and login save id to server socket\n  login = (event) => {\n    event.preventDefault();\n    if(this.state.name === undefined) {\n      alert('Name not set')\n      return\n    }\n    console.log('Logging', this.state.name, 'in as', event.target.name)\n    const { cookies } = this.props; \n    cookies.set('name', name, { path: '/' });\n  }\n\n  ///\n\n  handleNameChange = (event) => {\n    this.setState({name: event.target.value});\n  }\n\n  ///\n\n\n  render() {\n    console.log('client')\n    socket.on('change color', (col) => {\n      document.body.style.backgroundColor = col\n    })\n    return (\n      <div>\n        <div style={{ textAlign: \"center\" }}>\n          <button onClick={() => this.send() }>Change Color</button>\n          <button id=\"blue\" onClick={() => this.setColor('blue')}>Blue</button> \n          <button id=\"red\" onClick={() => this.setColor('red')}>Red</button>\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          <form>\n            <label>Player name:</label>\n            <input type=\"text\" name=\"name\" onChange={this.handleNameChange}></input><br/>\n            <input type=\"submit\" onClick={this.login} name=\"host\" value=\"Host\"/>\n            <input type=\"submit\" onClick={this.login} name=\"player\" value=\"Player\"/>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}