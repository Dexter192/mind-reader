{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\Website\\\\mind-reader\\\\socket-client\\\\src\\\\game\\\\host\\\\CurrentPlayers.js\";\nimport React from 'react';\nimport { socket } from \"../../service/socket\"; //This screen will have a button for visibility for every list item. \n//If we click the button, it will update itself from hide to show and \n//it will send a message to the socket to update the content. \n//The socket will update the data on the server and will then emit the \n//Updated data to the player-room, where the screen of the players will \n//be rerendered.\n//When a user loggs in, the host should get an updated list of the current users \n//(and he should be able to remove users)\n//Stretch goal: Score counting\n\nclass CurrentPlayers extends React.Component {\n  constructor() {\n    super();\n\n    this.removePlayer = () => {//this.setState();\n    };\n\n    this.activePlayers = () => {\n      console.log(\"Current players: \" + JSON.stringify(this.state.players, null, 4));\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        children: this.state.players.map(player => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: player\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      players: []\n    };\n    socket.emit('get players');\n  }\n\n  componentDidMount() {\n    socket.on('toggle screen', s => {\n      console.log('Test');\n      document.body.style.backgroundColor = 'green';\n    });\n    socket.on('update players', s => {\n      document.body.style.backgroundColor = 'green';\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"activePlayers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CurrentPlayers;","map":{"version":3,"sources":["C:/Users/Daniel/Documents/Website/mind-reader/socket-client/src/game/host/CurrentPlayers.js"],"names":["React","socket","CurrentPlayers","Component","constructor","removePlayer","activePlayers","console","log","JSON","stringify","state","players","map","player","emit","componentDidMount","on","s","document","body","style","backgroundColor","render","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,sBAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;;AAEA,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AAE3CC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAmBdC,YAnBc,GAmBC,MAAM,CACnB;AACD,KArBa;;AAAA,SAuBdC,aAvBc,GAuBE,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAAL,CAAWC,OAA1B,EAAmC,IAAnC,EAAyC,CAAzC,CAAlC;AACA,0BACE;AAAA,kBACG,KAAKD,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuBC,MAAM,iBACzB;AAAA,iCAAI;AAAA,sBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KA/Ba;;AAEZ,SAAKH,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGAX,IAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBf,IAAAA,MAAM,CAACgB,EAAP,CAAU,eAAV,EAA4BC,CAAD,IAAO;AAChCX,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAW,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;AACD,KAHD;AAKArB,IAAAA,MAAM,CAACgB,EAAP,CAAU,gBAAV,EAA6BC,CAAD,IAAO;AACjCC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;AACD,KAFD;AAGD;;AAgBDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAzC0C;;AA4C7C,eAAetB,cAAf","sourcesContent":["import React from 'react';\r\nimport {socket} from \"../../service/socket\";\r\n\r\n//This screen will have a button for visibility for every list item. \r\n//If we click the button, it will update itself from hide to show and \r\n//it will send a message to the socket to update the content. \r\n//The socket will update the data on the server and will then emit the \r\n//Updated data to the player-room, where the screen of the players will \r\n//be rerendered.\r\n\r\n\r\n//When a user loggs in, the host should get an updated list of the current users \r\n//(and he should be able to remove users)\r\n\r\n\r\n//Stretch goal: Score counting\r\n\r\nclass CurrentPlayers extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      players: [],\r\n    };\r\n    socket.emit('get players') \r\n  }\r\n    \r\n  componentDidMount() {\r\n    socket.on('toggle screen', (s) => {\r\n      console.log('Test')\r\n      document.body.style.backgroundColor = 'green';\r\n    })\r\n\r\n    socket.on('update players', (s) => {\r\n      document.body.style.backgroundColor = 'green';\r\n    })  \r\n  }\r\n\r\n  removePlayer = () => {\r\n    //this.setState();\r\n  }\r\n\r\n  activePlayers = () => {\r\n    console.log(\"Current players: \" + JSON.stringify(this.state.players, null, 4));\r\n    return (\r\n      <table>\r\n        {this.state.players.map(player =>\r\n             <tr><td>{player}</td></tr>)}\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"center\" }}>\r\n        activePlayers\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrentPlayers;"]},"metadata":{},"sourceType":"module"}