{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\Website\\\\mind-reader\\\\socket-client\\\\src\\\\game\\\\player\\\\PlayerScreen.js\";\nimport React from 'react';\nimport { socket } from \"../../service/socket\";\nimport WordTable from \"../assets/WordTable\";\n\nclass PlayerScreen extends React.Component {\n  constructor() {\n    super();\n\n    this.handleNameChange = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.state = {\n      wordList: [{\n        \"word\": \"word\",\n        \"visible\": true,\n        \"guesses\": [\"Guess1\", \"Guess2\"]\n      }]\n    };\n  }\n\n  componentDidMount() {\n    socket.on('toggle screen', s => {\n      console.log('Test');\n      document.body.style.backgroundColor = 'green';\n    });\n    socket.on('update wordList', words => {\n      console.log(\"Updating words\", words);\n      this.setState({\n        wordList: words\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [\"PlayerScreen\", /*#__PURE__*/_jsxDEV(WordTable, {\n        wordList: {\n          \"wordList\": this.state.wordList,\n          \"type\": \"player\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PlayerScreen;","map":{"version":3,"sources":["C:/Users/Daniel/Documents/Website/mind-reader/socket-client/src/game/player/PlayerScreen.js"],"names":["React","socket","WordTable","PlayerScreen","Component","constructor","handleNameChange","event","setState","name","target","value","state","wordList","componentDidMount","on","s","console","log","document","body","style","backgroundColor","words","render","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAkBdC,gBAlBc,GAkBMC,KAAD,IAAW;AAC5B,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAApB,OAAd;AACD,KApBa;;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,CAAC;AAAC,gBAAO,MAAR;AAAgB,mBAAW,IAA3B;AAAiC,mBAAU,CAAC,QAAD,EAAW,QAAX;AAA3C,OAAD;AADC,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBb,IAAAA,MAAM,CAACc,EAAP,CAAU,eAAV,EAA4BC,CAAD,IAAO;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;AACD,KAHD;AAIArB,IAAAA,MAAM,CAACc,EAAP,CAAU,iBAAV,EAA8BQ,KAAD,IAAW;AACpCN,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BK,KAA9B;AACA,WAAKf,QAAL,CAAc;AAACK,QAAAA,QAAQ,EAAEU;AAAX,OAAd;AACH,KAHD;AAID;;AAMDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,8CAEE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAE;AAAC,sBAAW,KAAKb,KAAL,CAAWC,QAAvB;AAAiC,kBAAO;AAAxC;AAArB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA9BwC;;AAiC3C,eAAeV,YAAf","sourcesContent":["import React from 'react';\r\nimport {socket} from \"../../service/socket\";\r\nimport WordTable from \"../assets/WordTable\"\r\n\r\nclass PlayerScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      wordList: [{\"word\":\"word\", \"visible\": true, \"guesses\":[\"Guess1\", \"Guess2\"]}]\r\n    };\r\n  }\r\n    \r\n  componentDidMount() {\r\n    socket.on('toggle screen', (s) => {\r\n      console.log('Test')\r\n      document.body.style.backgroundColor = 'green';\r\n    })\r\n    socket.on('update wordList', (words) => {\r\n        console.log(\"Updating words\", words)\r\n        this.setState({wordList: words});\r\n    })  \r\n  }\r\n\r\n  handleNameChange = (event) => {\r\n    this.setState({name: event.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"center\" }}>\r\n        PlayerScreen\r\n        <WordTable wordList={{\"wordList\":this.state.wordList, \"type\":\"player\"}} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerScreen;"]},"metadata":{},"sourceType":"module"}