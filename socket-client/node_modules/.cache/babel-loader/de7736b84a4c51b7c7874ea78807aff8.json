{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\Website\\\\mind-reader\\\\socket-client\\\\src\\\\game\\\\assets\\\\WordTable.js\";\nimport React from 'react';\nimport Word from \"../assets/Word\";\n\nclass WordTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.buildWordList = () => {\n      console.log(\"WordList:::\", this.props.wordList);\n\n      if (this.props.wordList[\"type\"] === \"host\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.props.wordList[\"wordList\"].map(word => /*#__PURE__*/_jsxDEV(Word, {\n            data: {\n              \"word\": word,\n              \"type\": \"host\",\n              \"players\": this.props.players\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 9\n        }, this);\n      }\n\n      if (this.props.wordList[\"type\"] === \"player\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.props.wordList[\"wordList\"].map(word => {\n            console.log(word);\n\n            if (word[\"visible\"]) {\n              return /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [\"1 - \", word[\"word\"], \" - \", word[\"guesses\"]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 24\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [\"???? - \", this.props.wordList[\"type\"]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 24\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.buildWord = (word, players, type) => {\n      /*<h1>0 - {word[\"word\"]} - {word[\"guesses\"]}</h1>,\r\n              <h2>Players</h2>*/\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }, this);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: this.buildWordList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default WordTable;","map":{"version":3,"sources":["C:/Users/Daniel/Documents/Website/mind-reader/socket-client/src/game/assets/WordTable.js"],"names":["React","Word","WordTable","Component","buildWordList","console","log","props","wordList","map","word","players","buildWord","type","render","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAEtCC,aAFsC,GAEtB,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKC,KAAL,CAAWC,QAAtC;;AACA,UAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoB,MAApB,MAAgC,MAAnC,EAA2C;AACvC,4BACA;AAAA,oBACG,KAAKD,KAAL,CAAWC,QAAX,CAAoB,UAApB,EAAgCC,GAAhC,CAAoCC,IAAI,iBACvC,QAAC,IAAD;AAAM,YAAA,IAAI,EAAE;AAAC,sBAAOA,IAAR;AAAc,sBAAO,MAArB;AAA6B,yBAAU,KAAKH,KAAL,CAAWI;AAAlD;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADA;AAMA;;AACJ,UAAG,KAAKJ,KAAL,CAAWC,QAAX,CAAoB,MAApB,MAAgC,QAAnC,EAA6C;AAC3C,4BACE;AAAA,oBACG,KAAKD,KAAL,CAAWC,QAAX,CAAoB,UAApB,EAAgCC,GAAhC,CAAoCC,IAAI,IACvC;AACEL,YAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;;AACA,gBAAGA,IAAI,CAAC,SAAD,CAAP,EAAoB;AAClB,kCAAO;AAAA,mCAASA,IAAI,CAAC,MAAD,CAAb,SAA0BA,IAAI,CAAC,SAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFD,MAGK;AACH,kCAAO;AAAA,sCAAY,KAAKH,KAAL,CAAWC,QAAX,CAAoB,MAApB,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;AACF,WATF;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AAcE;AACL,KA5BqC;;AAAA,SA8BtCI,SA9BsC,GA8B1B,CAACF,IAAD,EAAOC,OAAP,EAAgBE,IAAhB,KAAyB;AACnC;AACJ;AACI,0BAAO;AAAA,kBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAlCuC;AAAA;;AAoCtCI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,gBACG,KAAKX,aAAL;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA1CqC;;AA6CxC,eAAeF,SAAf","sourcesContent":["import React from 'react';\r\nimport Word from \"../assets/Word\";\r\n\r\nclass WordTable extends React.Component {  \r\n\r\n  buildWordList = () => {\r\n    console.log(\"WordList:::\", this.props.wordList);\r\n    if(this.props.wordList[\"type\"] === \"host\") {\r\n        return (\r\n        <div>\r\n          {this.props.wordList[\"wordList\"].map(word => \r\n            <Word data={{\"word\":word, \"type\":\"host\", \"players\":this.props.players}}/>,\r\n          )}\r\n        </div>\r\n      )}\r\n    if(this.props.wordList[\"type\"] === \"player\") {\r\n      return (\r\n        <div>\r\n          {this.props.wordList[\"wordList\"].map(word => \r\n            {\r\n              console.log(word)\r\n              if(word[\"visible\"]) {\r\n                return <h1>1 - {word[\"word\"]} - {word[\"guesses\"]}</h1>\r\n              }\r\n              else {\r\n                return <h1>???? - {this.props.wordList[\"type\"]}</h1>\r\n              }\r\n            }   \r\n          )}\r\n        </div>\r\n      )}\r\n  }\r\n\r\n  buildWord = (word, players, type) => {\r\n    /*<h1>0 - {word[\"word\"]} - {word[\"guesses\"]}</h1>,\r\n            <h2>Players</h2>*/\r\n    return <h1>{word}</h1>;\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"center\" }}>\r\n        {this.buildWordList()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WordTable;"]},"metadata":{},"sourceType":"module"}