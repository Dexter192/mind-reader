{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\Website\\\\mind-reader\\\\socket-client\\\\src\\\\game\\\\Game.js\";\nimport React from 'react';\nimport { socket } from \"../service/socket\";\nimport Error from \"./Error\";\nimport HostScreen from \"./host/HostScreen\";\nimport PlayerScreen from \"./player/PlayerScreen\";\nimport Timer from \"./assets/Timer\";\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n\n    this.loadPageContent = () => {\n      if (this.state.type === \"none\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 14\n        }, this);\n      } else if (this.state.type === \"host\") {\n        return /*#__PURE__*/_jsxDEV(HostScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }, this);\n      } else if (this.state.type === \"player\") {\n        return /*#__PURE__*/_jsxDEV(PlayerScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }, this);\n      }\n    };\n\n    this.state = {\n      type: 'none'\n    };\n  }\n\n  componentDidMount() {\n    socket.on('load gamescreen', (type, name) => {\n      console.log(\"Load game screen\");\n      this.setState({\n        type: type,\n        name: name\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.loadPageContent(), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/Daniel/Documents/Website/mind-reader/socket-client/src/game/Game.js"],"names":["React","socket","Error","HostScreen","PlayerScreen","Timer","Game","Component","constructor","loadPageContent","state","type","componentDidMount","on","name","console","log","setState","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AAEjCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAedC,eAfc,GAeI,MAAM;AACtB,UAAI,KAAKC,KAAL,CAAWC,IAAX,KAAoB,MAAxB,EAAgC;AAC9B,4BAAO;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAGK,IAAI,KAAKD,KAAL,CAAWC,IAAX,KAAoB,MAAxB,EAAgC;AACnC,4BAAO,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFI,MAGA,IAAI,KAAKD,KAAL,CAAWC,IAAX,KAAoB,QAAxB,EAAkC;AACrC,4BAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFI,MAGA;AACH,4BAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AAEF,KA7Ba;;AAEZ,SAAKD,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAGDC,EAAAA,iBAAiB,GAAG;AAClBX,IAAAA,MAAM,CAACY,EAAP,CAAU,iBAAV,EAA6B,CAACF,IAAD,EAAOG,IAAP,KAAgB;AAC3CC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,WAAKC,QAAL,CAAc;AAACN,QAAAA,IAAI,EAAEA,IAAP;AAAaG,QAAAA,IAAI,EAAEA;AAAnB,OAAd;AACD,KAHD;AAID;;AAkBDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,iBACG,KAAKT,eAAL,EADH,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAxCgC;;AA2CnC,eAAeH,IAAf","sourcesContent":["import React from 'react';\r\nimport {socket} from \"../service/socket\";\r\nimport Error from \"./Error\";\r\nimport HostScreen from \"./host/HostScreen\"\r\nimport PlayerScreen from \"./player/PlayerScreen\"\r\nimport Timer from \"./assets/Timer\"\r\n\r\nclass Game extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      type: 'none',\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    socket.on('load gamescreen', (type, name) => {\r\n      console.log(\"Load game screen\")\r\n      this.setState({type: type, name: name});\r\n    })\r\n  }\r\n\r\n  loadPageContent = () => {\r\n    if (this.state.type === \"none\") {\r\n      return <div/>\r\n    }\r\n    else if (this.state.type === \"host\") {\r\n      return <HostScreen/>\r\n    }\r\n    else if (this.state.type === \"player\") {\r\n      return <PlayerScreen/>\r\n    }\r\n    else {\r\n      return <Error/>\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.loadPageContent()}\r\n        <Timer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}